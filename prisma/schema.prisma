generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum ROLE {
  USER
  ADMIN
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  email         String    @unique
  password      String?
  emailVerified Boolean   @default(false)
  image         String?
  token         String?   @unique
  role          ROLE      @default(USER)
  createdAt     DateTime  @default(now())
  Product       Product[]
  Favorite      Favorite[]  
}

model Category {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  image     String
  createdAt DateTime  @default(now())
  Product   Product[]
}

model Product {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Int
  images      String[]
  views       Int         @default(1)
  categoryId  String?     @db.ObjectId
  Category    Category?   @relation(fields: [categoryId], references: [id])
  createdAt   DateTime    @default(now())
  UserId      String?     @db.ObjectId
  User        User?       @relation(fields: [UserId], references: [id])
  OrderItem   OrderItem[]
  Favorite    Favorite[]
}

model Order {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  isPaid      Boolean      @default(false)
  addressinfo addressinfo?
  createdAt   DateTime     @default(now())
  OrderItem   OrderItem[]
}

model OrderItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  quantity  Int      @default(1)
  orderId   String   @db.ObjectId
  Order     Order    @relation(fields: [orderId], references: [id])
  productId String   @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
}

model addressinfo {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  address   String
  city      String
  state     String
  country   String
  pincode   Int
  PhoneNo   Int
  orderId   String   @db.ObjectId
  createdAt DateTime @default(now())
  Order     Order?   @relation(fields: [orderId], references: [id])

  @@unique([orderId])
}

model Favorite {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  productId String   @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
}